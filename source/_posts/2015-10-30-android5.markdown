---
layout: post
title: "px,dip(dp),sp,dpi,分辨率详解"
date: 2015-3-21 16:26:34 +0800
comments: true
categories: [Android,常用代码块]
---
#欢迎来到风的博客

###px,dip(dp),sp,dpi,分辨率详解
1.px (pixels)像素: 是像素，就是屏幕上实际的像素点单位。
 dip或dp (device independent pixels)设备独立像素， 与设备屏幕有关。
 sp (scaled pixels : best for text size)：类似dp， 主要处理字体的大小。
dpi(dot per inch):屏幕像素密度，每英寸多少像素

density：density表示每英寸有多少个显示点(逻辑值)，它的单位是dpi

2.dpi是屏幕像素密度。就是1英寸上像素点的个数。对于屏幕来说，dpi越大，屏幕的精细度越高，屏幕看起来就越清楚。比如iphone4的视网膜级的屏幕肯定比iphone 3gs的屏幕像素密度高的多。

3.sp由于是放大像素，主要是用于字体显示，由此根据google的建议，TextView的字体大小最好用sp做单位

4.dp是与密度无关，sp除了与密度无关外，还与scale无关。如果屏幕密度为160，这时dp和sp和px是一样的。1dp=1sp=1px，但如果使用px作单位，如果屏幕大小不变（假设还是3.2寸），而屏幕密度变成了320。那么原来TextView的宽度设成160px，在密度为320的3.2寸屏幕里看要比在密度为160的3.2寸屏幕上看短了一半。但如果设置成160dp或160sp的话。系统会自动将width属性值设置成320px的。也就是160 * 320 / 160。其中320 / 160可称为密度比例因子。也就是说，如果使用dp和sp，系统会根据屏幕密度的变化自动进行转换。 

5.dip值 =（dpi值/160）* pixel值

6.像素密度和分辨率是两个不同的概念，分辨率是总的像素点，像素密度是单位长度的像素点

HVGA屏density=160；QVGA屏density=120；WVGA屏density=240；WQVGA屏density=120

VGA：Video Graphics Array，即：显示绘图矩阵，相当于640×480 
HVGA：Half-size VGA；即：VGA的一半，分辨率为480×320；

QVGA：Quarter VGA；即：VGA的四分之一，分辨率为320×240；

WVGA：Wide Video Graphics Array；即：扩大的VGA，分辨率为800×480像素；

WQVGA：Wide Quarter VGA；即：扩大的QVGA，分辨率比QVGA高，比VGA低，一般是：400×240，480×272

-------------------------------------------------------------------------------------------------
px   ：是屏幕的像素点
in    ：英寸
mm ：毫米
pt    ：磅，1/72 英寸
dp   ：一个基于density的抽象单位，如果一个160dpi的屏幕，1dp=1px
dip  ：等同于dp
sp   ：同dp相似，但还会根据用户的字体大小偏好来缩放。
建议使用sp作为文本的单位，其它用dip
针对dip和px 的关系，做以下概述：
QVGA屏density=120；          QVGA（240*320）
HVGA屏density=160；          HVGA（320*480）
WVGA屏density=240；         WVGA（480*800）
WQVGA屏density=120          WQVGA（240*400）
density值表示每英寸有多少个显示点，与分辨率是两个概念。
不同density下屏幕分辨率信息，以480dip*800dip的 WVGA(density=240)为例
density=120时 
屏幕实际分辨率为240px*400px （两个点对应一个分辨率）
状态栏和标题栏高各19px或者25dip
横屏是屏幕宽度400px 或者800dip,工作区域高度211px或者480dip
竖屏时屏幕宽度240px或者480dip,工作区域高度381px或者775dip

density=160时 
屏幕实际分辨率为320px*533px （3个点对应两个分辨率）
状态栏和标题栏高个25px或者25dip
横屏是屏幕宽度533px 或者800dip,工作区域高度295px或者480dip
竖屏时屏幕宽度320px或者480dip,工作区域高度508px或者775dip

density=240时 
屏幕实际分辨率为480px*800px （一个点对于一个分辨率）
状态栏和标题栏高个38px或者25dip
横屏是屏幕宽度800px 或者800dip,工作区域高度442px或者480dip
竖屏时屏幕宽度480px或者480dip,工作区域高度762px或者775dip

apk的资源包中
当屏幕density=240时，使用hdpi 标签的资源
当屏幕density=160时，使用mdpi标签的资源
当屏幕density=120时，使用ldpi标签的资源。
不加任何标签的资源是各种分辨率情况下共用的。
布局时尽量使用单位dip，少使用px

dp与px换算公式：

$$  pixs =dips * (densityDpi/160)$$
$$  dips=(pixs*160)/densityDpi$$

dp这个单位可能对web开发的人比较陌生,因为一般都是使用px(像素)
但是,现在在开始android应用和游戏后,基本上都转换成用dp作用为单位了,因为可以支持多种分辨率的手机.

以下是这两个单位的概念:
px (pixels)像素: 一个像素通常被视为图像的最小的完整采样，这个用的比较多,特别是web开发,页面基本都是使用像素作为单位的.
dip或dp (device independent pixels)设备独立像素 ― 这个和设备硬件有关，一般我们为了支持手机上多种分辨率,如WVGA、HVGA和QVGA,都会使用dip作为长度的单位
在Android开发我们一般都可以不需要使用px的,但是某一些控件的属性没有直接支持dip,像下面的代码
```
android.view.ViewGroup.LayoutParams.height
android.view.ViewGroup.LayoutParams.width
```
上面这两个属性的单位为像素,但是为了兼容多种分辨率的手机,我们需要最好使用dip,时候我们可以调用以下的代码进行转换.
```
int heightPx= DisplayUtil.dip2px(this, 33);
mTabHost.getTabWidget().getChildAt(i).getLayoutParams().height = heightPx;
```
以上代码可以在我另一篇文章看得到.该功能是设置Tab的高度,单位是像素.以上的单位转换是为了支持多分辨率手机的.
```
public static int dip2px(Context context, float dpValue) {
	final float scale = context.getResources().getDisplayMetrics().density;
	return (int) (dpValue * scale + 0.5f);
}
 
public static int px2dip(Context context, float pxValue) {
	final float scale = context.getResources().getDisplayMetrics().density;
	return (int) (pxValue / scale + 0.5f);
}
```