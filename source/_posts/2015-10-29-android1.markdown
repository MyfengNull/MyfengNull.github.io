---
layout: post
title: "android常用代码1"
date: 2014-6-15 8:22:24 +0800
comments: true
categories: [Android,常用代码块]
---
# 欢迎来到风的博客
-**Activity跳转代码模板**

-**Toast使用**

-**获取当前系统时间**

-**获取屏幕宽度和高度**

###Activity跳转代码模板
```
Intent intent = new Intent(A.this, B.class);
Bundle bundle = new Bundle();
bundle.putString("key", "value");
bundle.putInt("key", 0);
intent.putExtras(bundle);
startActivity(intent);

-------------------------------------------------------------------------------
startActivityForResult(intent, requestCode);

@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
	if (resultCode == RESULT_OK) {		
	}
}

--------------------------------------------------------------------------------
返回传递参数：
Intent intent = new Intent();
Bundle bundle = new Bundle();
bundle.putString("key", "value");
bundle.putInt("key", 0);
intent.putExtras(bundle);
setResult(RESULT_OK, intent);
finish();

返回不传递参数：
setResult(RESULT_OK);
finish();
```

###Toast使用
```
Toast.makeText(getApplicationContext(), "默认Toast样式", Toast.LENGTH_SHORT).show();

private void makeTip(String info) {
	Toast toast = Toast.makeText(getApplicationContext(), info, Toast.LENGTH_SHORT);
	toast.setGravity(Gravity.CENTER, 0, 0);
	toast.show();
}
```
###获取当前系统时间
```
//12小时制
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
String date = sdf.format(new java.util.Date());


//24小时制
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
String date = sdf.format(new java.util.Date());
```
###获取屏幕宽度和高度
```
public static int displayWidth;  //屏幕宽度
public static int displayHeight; //屏幕高度

DisplayMetrics displayMetrics = new DisplayMetrics();
getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
displayWidth = displayMetrics.widthPixels;
displayHeight = displayMetrics.heightPixels;
```
#####但是，需要注意的是，在一个低密度的小屏手机上，仅靠上面的代码是不能获取正确的尺寸的。比如说，一部240x320像素的低密度手机，如果运行上述代码，获取到的屏幕尺寸是320x427。因此，研究之后发现，若没有设定多分辨率支持的话，Android系统会将240x320的低密度（120）尺寸转换为中等密度（160）对应的尺寸，这样的话就大大影响了程序的编码。所以，需要在工程的AndroidManifest.xml文件中，加入supports-screens节点，具体的内容如下：
```
<supports-screens
	android:smallScreens="true"
	android:normalScreens="true"
	android:largeScreens="true"
	android:resizeable="true"
	android:anyDensity="true" />
```
#####这样的话，当前的Android程序就支持了多种分辨率，那么就可以得到正确的物理尺寸了。
-原文引自[http://www.67bar.com/archives/1971]